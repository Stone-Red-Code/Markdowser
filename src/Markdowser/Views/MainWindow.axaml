<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Markdowser.ViewModels"
        xmlns:cmd="using:Markdowser.Commands"
        xmlns:utils="using:Markdowser.Utilities"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="https://github.com/projektanker/icons.avalonia"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Markdowser.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="{Binding Icon}"
        Title="{Binding Title}"
        Loaded="Window_Loaded" WindowState="{Binding WindowState}">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <cmd:ChangeThemeCommand x:Key="ChangeThemeCommand" />
                    <cmd:HomeCommand x:Key="HomeCommand" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.KeyBindings>
        <KeyBinding Gesture="Ctrl+R" Command="{Binding Reload}" />
        <KeyBinding Gesture="F5" Command="{Binding Reload}" />
        <KeyBinding Gesture="Alt+Home" Command="{StaticResource HomeCommand}" />
        <KeyBinding Gesture="Alt+H" Command="{StaticResource HomeCommand}" />
        <KeyBinding Gesture="Alt+Left" Command="{Binding Back}" />
        <KeyBinding Gesture="Alt+Right" Command="{Binding Forward}" />
        <KeyBinding Gesture="Ctrl+T" Command="{Binding NewTab}" />
        <KeyBinding Gesture="Ctrl+W" Command="{Binding CloseTab}" />
        <KeyBinding Gesture="Alt+S" Command="{Binding ToggleSidePanel}" />
        <KeyBinding Gesture="F11" Command="{Binding ToggleFullScreen}" />
    </Window.KeyBindings>

    <Grid RowDefinitions="Auto, *, Auto">
        <Grid Grid.Row="0" ColumnDefinitions="*, Auto, Auto">
            <TabControl Grid.Column="0" SelectedItem="{Binding CurrentTab, Mode=TwoWay}" ItemsSource="{Binding Tabs}" IsEnabled="{Binding !IsBusy}" />
            <Button Grid.Column="1" Command="{Binding CloseTab}" HorizontalAlignment="Right" VerticalAlignment="Stretch" i:Attached.Icon="fa-solid fa-xmark">
                <Button.IsEnabled>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                        <Binding Path="CloseTabEnabled" />
                        <Binding Path="!IsBusy" />
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
            <Button Grid.Column="2" Command="{Binding NewTab}" HorizontalAlignment="Right" VerticalAlignment="Stretch" i:Attached.Icon="fa-solid fa-plus" IsEnabled="{Binding !IsBusy}" />
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" utils:ColumnDefinition.IsVisible="{Binding ShowSidePanel}" />
            </Grid.ColumnDefinitions>

            <ContentControl IsEnabled="{Binding !IsBusy}" Content="{Binding Content}" />

            <GridSplitter Grid.Column="1" IsVisible="{Binding ShowSidePanel}" Background="{DynamicResource SemiColorTertiary}" ResizeDirection="Columns" />
            <TabControl  Grid.Column="2" IsVisible="{Binding ShowSidePanel}" Margin="10">
                <TabItem Header="Settings">
                    <ScrollViewer>
                        <ContentControl Margin="0 10 0 0" Content="{Binding SettingsViewModel}" />
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Raw Content">
                    <ScrollViewer>
                        <SelectableTextBlock Margin="0 10 0 0" Text="{Binding RawContent}" TextWrapping="Wrap" />
                    </ScrollViewer>
                </TabItem>
            </TabControl>
        </Grid>

        <Border Grid.Row="2" BorderThickness="0 2 0 0" CornerRadius="0" BorderBrush="{DynamicResource SemiColorTertiary}">
            <Grid ColumnDefinitions="Auto, Auto, Auto, Auto, *, Auto">
                <Button Grid.Column="0" i:Attached.Icon="fa-solid fa-caret-left" Command="{Binding Back}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="BackEnabled" />
                            <Binding Path="!IsBusy" />
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <Button Grid.Column="1" i:Attached.Icon="fa-solid fa-caret-right" Command="{Binding Forward}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="ForwardEnabled" />
                            <Binding Path="!IsBusy" />
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <Button Grid.Column="2" i:Attached.Icon="fa-solid fa-rotate-right" Command="{Binding Reload}" IsEnabled="{Binding !IsBusy}" />
                <Button Grid.Column="3" i:Attached.Icon="fa-solid fa-house" Command="{StaticResource HomeCommand}" IsEnabled="{Binding !IsBusy}" />

                <Grid Grid.Column="4">
                    <TextBox IsVisible="{Binding !IsBusy}" Watermark="Search or type a URL" Text="{Binding Url}" BorderThickness="0">
                        <TextBox.KeyBindings>
                            <KeyBinding Gesture="Enter" Command="{Binding Browse}" />
                        </TextBox.KeyBindings>
                        <TextBox.Styles>
                            <Style Selector="TextBox:focus /template/ Border#PART_BorderElement">
                                <Setter Property="BorderThickness" Value="0" />
                            </Style>
                        </TextBox.Styles>
                    </TextBox>

                    <ProgressBar IsVisible="{Binding IsBusy}" IsIndeterminate="{Binding ProgressIndeterminate}" ShowProgressText="{Binding !ProgressIndeterminate}" ProgressTextFormat="{Binding ProgressText}" Height="32" Grid.Row="2" Value="{Binding Progress}" Maximum="{Binding ProgressMax}" />
                </Grid>

                <Button Grid.Column="5" Command="{Binding ToggleSidePanel}" HorizontalAlignment="Right" i:Attached.Icon="fa-solid fa-table-columns" />
            </Grid>
        </Border>
    </Grid>
</Window>